{"version":3,"file":"static/js/584.bf9fd82e.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/pages/ContactsPage/ContactsPage.module.css?c85d","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","redux/selectors.js","components/ContactForm/ContactForm.jsx","components/ContactsFilter/ContactsFilter.jsx","webpack://react-homework-template/./src/components/ContactsList/ContactsList.module.css?d8e9","components/ContactsList/ContactsList.jsx","components/pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ContactsPage_container__idZzt\"};","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"label\":\"ContactForm_label__-cVXI\",\"input\":\"ContactForm_input__Bl93P\",\"btn\":\"ContactForm_btn__wll+u\"};","export const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter.filter;\n","import { useState } from 'react';\nimport css from './ContactForm.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/selectors';\nimport { addContact } from 'redux/operations';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleChange = ({ target: { value, name } }) => {\n    if (name === 'name') setName(value);\n    else if (name === 'number') setNumber(value);\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n\n    const existingName = contacts.some(\n      item => item.name.toLowerCase() === name.toLowerCase()\n    );\n    const existingNumber = contacts.find(item => item.number === number);\n\n    if (existingName) {\n      return alert(`Contact \"${name}\" is already in contacts list`);\n    } else if (existingNumber) {\n      return alert(`Number \"${number}\" is already in contacts list`);\n    }\n    const newContact = {\n      name,\n      number,\n    };\n    dispatch(addContact(newContact));\n\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form autoComplete=\"off\" onSubmit={handleSubmit} className={css.form}>\n      <label htmlFor=\"name\" className={css.label}>\n        Name\n        <input\n          className={css.input}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          placeholder=\"Rosie Simpson\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label htmlFor=\"number\" className={css.label}>\n        Number\n        <input\n          className={css.input}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          placeholder=\"+380556688995\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n      <button type=\"submit\" className={css.btn}>\n        Add contact\n      </button>\n    </form>\n  );\n};\n","import React from 'react';\n\nimport css from '../ContactForm/ContactForm.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { filterContacts } from 'redux/filterSlice';\nimport { selectFilter } from 'redux/selectors';\n\nexport const ContactsFilter = () => {\n  const filter = useSelector(selectFilter);\n  const distpach = useDispatch();\n\n  return (\n    <label htmlFor=\"filter\" className={css.label}>\n      Find contacts by name\n      <input\n        className={css.input}\n        type=\"text\"\n        name=\"filter\"\n        title=\"Please enter a name to find your contacts\"\n        value={filter}\n        onChange={event => distpach(filterContacts(event.target.value))}\n      />\n    </label>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contactList\":\"ContactsList_contactList__qIIH9\",\"item\":\"ContactsList_item__6gc1x\",\"itemName\":\"ContactsList_itemName__i2UjD\",\"btnDelete\":\"ContactsList_btnDelete__bDwNP\"};","import React from 'react';\n\nimport css from './ContactsList.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts, selectFilter } from 'redux/selectors';\nimport { deleteContact } from 'redux/operations';\n\nexport const ContactsList = () => {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n  const distpach = useDispatch();\n\n  const filterContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  return (\n    <ul className={css.contactList}>\n      {filterContacts.map(({ id, name, number }) => {\n        return (\n          <li key={id} id={id} className={css.item}>\n            <p className={css.itemName}>\n              {name}:<span>{number}</span>\n            </p>\n            <button\n              className={css.btnDelete}\n              type=\"button\"\n              onClick={() => distpach(deleteContact(id))}\n            >\n              Delete\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport css from './ContactsPage.module.css';\n\nimport { ContactForm } from '../../ContactForm/ContactForm';\nimport { ContactsFilter } from '../../ContactsFilter/ContactsFilter';\nimport { ContactsList } from '../../ContactsList/ContactsList';\nimport { selectContacts, selectError, selectIsLoading } from 'redux/selectors';\nimport { fetchContacts } from 'redux/operations';\nimport { Loader } from '../../Loader/Loader';\n\nexport default function ContactsPage() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div className={css.container}>\n      <h1>Phonebook</h1>\n      <ContactForm />\n\n      <h2>Contacts</h2>\n      <ContactsFilter />\n      {isLoading && <Loader />}\n      {error && <p>Sorry. {error}</p>}\n      {contacts.length === 0 && <p>Sorry, there is no contacts yet</p>}\n      <ContactsList />\n    </div>\n  );\n}\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","filter","ContactForm","useState","name","setName","number","setNumber","useSelector","dispatch","useDispatch","handleChange","target","value","autoComplete","onSubmit","evt","preventDefault","existingName","some","item","toLowerCase","existingNumber","find","alert","newContact","addContact","className","css","htmlFor","type","onChange","placeholder","pattern","title","required","ContactsFilter","distpach","event","filterContacts","ContactsList","contact","includes","map","id","onClick","deleteContact","ContactsPage","useEffect","fetchContacts","Loader","length"],"sourceRoot":""}